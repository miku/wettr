[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[project]

name = "wettr"
requires-python = ">= 3.8"
version = "0.1.4" # OR: dynamic = ["version"]
description = "Small weather cli using open meteo API"
readme = "README.md" # readme = {file = "README.txt", content-type = "text/markdown"}
license = {file = "LICENSE"}

dependencies = [
    "requests>=2.31,<3", # https://packaging.python.org/en/latest/specifications/dependency-specifiers/#dependency-specifiers
    "xdg-base-dirs>=6,<7",
]

authors = [
  {name = "Martin Czygan", email = "martin.czygan@gmail.com"},
]
maintainers = [
  {name = "Martin Czygan", email = "martin.czygan@gmail.com"},
]

keywords = ["weather", "cli"]

[project.scripts]
wettr-cli = "wettr:main.main"

[project.urls]
Homepage = "https://github.com/miku/wettr"
Documentation = "https://github.com/miku/wettr"
Repository = "https://github.com/miku/wettr.git"
Issues = "https://github.com/miku/wettr/issues"
# Changelog = "https://github.com/miku/wettr/blob/master/CHANGELOG.md"


# There are many different tools, and they can piggyback on pyproject.toml, via
# [tool.xxx] tables, e.g. [tool.poetry], [tool.poetry....]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "I001", "C901"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.mypy]
python_version = "3.10"
# ignore_missing_imports = true # does not work globally (yet)

[[tool.mypy.overrides]]
module = [
    "requests",
]
ignore_missing_imports = true

# pyproject.toml
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
